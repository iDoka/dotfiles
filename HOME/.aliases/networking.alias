## detect current IP
alias myip="curl http://ipecho.net/plain; echo"

###########################################
## Yt-Dlp format detect
alias yt='yt-dlp -F'   # get options to media download: which formats are supported?
alias ytw='yt'

###########################################
## full media (with advertisement and sponsor block)
alias ytd-full='yt-dlp -f 22' # youtube video [default]
alias ytv-full='ytd-full'
## ------------------
alias ytah-full='yt-dlp -f 140' # youtube audio [HQ]
alias ytal-full='yt-dlp -f 139' # youtube audio [LQ]
alias yta-full='ytah-full'

###########################################
## no advertisement and sponsor block
alias ytd='yt-dlp -f 22 --sponsorblock-remove intro,sponsor,selfpromo,preview,outro'   # youtube video [default]
alias ytv='ytd'
## ------------------
alias ytah='yt-dlp -f 140 --sponsorblock-remove intro,sponsor,selfpromo,preview,outro' # youtube audio [HQ]
alias ytal='yt-dlp -f 139 --sponsorblock-remove intro,sponsor,selfpromo,preview,outro' # youtube audio [LQ]
alias yta='ytah'

###########################################
## NginX
alias ngx='sudo systemctl reload nginx.service'

## listening ports
alias ports='netstat -tulanp'

###########################################
## Wireguard
alias vpnup='sudo wg-quick up wg0-client'
alias vpndown='sudo wg-quick down wg0-client'

# SSH with X11 forwarding enabled (GUI windows opened on the remote server display locally)
alias ssh-x='ssh -X'

# Setup the secure copy command to preserve file metadata and recursively copy data
alias scp='scp -p -r'

# Fetches all the files under a given directory on a website with the web get command.
alias wget-dir='wget --recursive i--no-host-directories --no-directories --no-parent --execute robots=off'

# Downloads a file in parallel from a website using the maximum possible number of connections and threads.
MAX_DOWNLOAD_CONNECTIONS=16
alias parallel-download="aria2c --max-connection-per-server=${MAX_DOWNLOAD_CONNECTIONS} --split=${MAX_DOWNLOAD_CONNECTIONS}"


## see: https://github.com/ohmyzsh/ohmyzsh/blob/master/plugins/wakeonlan/README.md
function wake() {
  local config_file="$HOME/.wakeonlan/$1"
  if [[ ! -f "$config_file" ]]; then
    echo "ERROR: There is no configuration file at \"$config_file\"."
    return 1
  fi

  if (( ! $+commands[wakeonlan] )); then
    echo "ERROR: Can't find \"wakeonlan\".  Are you sure it's installed?"
    return 1
  fi

  wakeonlan -f "$config_file"
}
